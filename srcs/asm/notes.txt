labels: can be on the same line, next, or whitespace in between
- several labels in a row, all point to the line after the labels.
- If no statements are given, it will indicate to the place immediately
after the champion's executable code, but if no '\n' is found and EOF is reached 
= ERROR (beware of several labels in a row where the last one does not have a newline)

statements:
- valid argument, argument types, separator char, label char, (alt)comment

Need to handle:
- calculate the result of the labels
- error: duplicate label, undefined label

No need to handle:
- the contents of registries
- the memory

VM:
- replicate bug of lld? read size of 2 instead of 4
- use of % MEM_SIZE to prevent overruns

1. Tokenize V
	- no other types other than NEWLINE between NAME and COMMENT
	- file has to start with name and comment before statements, labels..
	- only declared once
 __Validate:
2. Save header
3. Save label names, and index it points to. Save in t_lab, not as statement.
4. Parse, save data in structs:
	- label: t_lab
	- statement: t_stat

-- Only need to find the label address and calculate at time of translation.
	- save to hash table before?

5. Validate:
Statement:
- name
- opcode
- arg_count
- arg_type
- characters 

TEST:
file starts with number, comment, label, op
file stops with -||-